sudo: false

language: cpp

matrix:
  include:
    - env: PYTHON="2.7" CONDA_PY=27
      os: linux
      dist: trusty
    - env: PYTHON="3.5" CONDA_PY=35
      os: linux
      dist: trusty
    - env: PYTHON="3.6" CONDA_PY=36
      os: linux
      dist: trusty

install:
  - if [ ${PYTHON:0:1} == "2" ]; then
      if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh;
      else
      wget https://repo.continuum.io/miniconda/Miniconda2-latest-MacOSX-x86_64.sh -O miniconda.sh;
      fi;
      else
      if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
      else
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh;
      fi;
    fi;
  - chmod +x miniconda.sh
  # When we are installing the 32 Bit conda on a 64 Bit system, the miniconda
  # installer will ask for a "yes" despite the -b flag, so we pipe in a yes
  - yes | ./miniconda.sh -b -p $HOME/miniconda
  #- bash miniconda.sh -b -p -f $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$HOME/miniconda/lib:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  # add channels
#  - conda config --append channels conda-forge
  #- conda config --append channels dlr-sc
#  - conda config --append channels tpaviot
#  - conda config --add channels https://conda.anaconda.org/dlr-sc
#  - conda config --add channels https://anaconda.org/tpaviot
  - conda config --add channels oce
  - conda config --add channels conda-forge
  - conda config --add channels dlr-sc
  # channel priority over package version priority
  - conda config --set channel_priority true
  # Useful for debugging any issues with conda
  - conda info -a
  - conda create -n pythonocc-utils-test
  - source activate pythonocc-utils-test
  - conda install conda-build
  - conda install -n pythonocc-utils-test oce==0.18.3
  # --------------
  # download the *current* master build, which is uploaded from TravisCI
  # to tpaviot's conda channel https://anaconda.org/tpaviot/pythonocc-core
  #
  # Stop gap solution some issues why it can't be ordinarily downloaded from conda...
  #(pyocc_test) 564 jelleferinga:pythonocc-utils$ conda search --override-channels --channel https://anaconda.org/tpaviot/pythonocc-core pythonocc-core
  #Loading channels: failed
  #
  #CondaHTTPError: HTTP 404 NOT FOUND for url <https://anaconda.org/tpaviot/pythonocc-core/noarch/repodata.json>
  #Elapsed: 00:00.457585
  #CF-RAY: 4527bef69eab72e9-AMS
  #
  #The remote server could not find the noarch directory for the
  #requested channel with url: https://anaconda.org/tpaviot/pythonocc-core
  #
  #As of conda 4.3, a valid channel must contain a `noarch/repodata.json` and
  #associated `noarch/repodata.json.bz2` file, even if `noarch/repodata.json` is
  #empty. please request that the channel administrator create
  #`noarch/repodata.json` and associated `noarch/repodata.json.bz2` files.
  #$ mkdir noarch
  #$ echo '{}' > noarch/repodata.json
  #$ bzip2 -k noarch/repodata.json
  # --------------
  - export PYOCC_CONDA_URL=https://anaconda.org/tpaviot/pythonocc-core/0.18.2/download/linux-64
  - wget ${PYOCC_CONDA_URL}/pythonocc-core-0.18.2-py${CONDA_PY}h39e3cac_108.tar.bz2 -O pythonocc-core-master.tar.bz2;
  - conda index
  - conda install -n pythonocc-utils-test pythonocc-core --use-index-cache # use downloaded version
  - conda install -n pythonocc-utils-test -c conda-forge scipy # solve radius example

script:
  - source activate pythonocc-utils-test
  - python setup.py build install
  - cd test
  - python occutils_test.py

branches:
  only:
    - master
    - /^review/
